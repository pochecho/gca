{"tokens": {"{NameCrud}": {"MIDIS": "self.contenido = self.contenido.replace(\"{NameCrud}\",self.clase.nombre)\n\nself.contenido = self.contenido.replace(\"{ NameCrud }\",self.clase.nombre)\n\n\n\n", "PYTHON": ""}, "{NameCrudTable}": {"MIDIS": "self.contenido = self.contenido.replace(\"{NameCrudTable}\",self.clase.nombre+\"_table\")\n\nself.contenido = self.contenido.replace(\"{ NameCrudTable }\",self.clase.nombre+\"_table\")\n\n\n\n\n", "PYTHON": ""}, "{DataTableColumns}": {"MIDIS": "token = \"\"\nfor att in self.clase.atributos:\n\ttoken += \"{data:\\\"\"+att.nombre+\"\\\",name:\\\"\"+att.nombre+\"\\\"},\\n\"\nself.contenido = self.contenido.replace(\"{DataTableColumns\",token)\nself.contenido = self.contenido.replace(\"{ DataTableColumns }\",token)\n\n\n\n\n\n", "PYTHON": ""}, "{CrudCopies}": {"MIDIS": "token = \"\"\nfor att in self.clase.atributos:\n\ttoken += \"\\\"\"+att.nombreDB+\"\\\"=> \\\"\"+att.displayName+\"\\\",\\n\"\nself.contenido = self.contenido.replace(\"{CrudCopies\",token)\nself.contenido = self.contenido.replace(\"{ CrudCopies }\",token)\n\n\n\n\n\n\n", "PYTHON": ""}, "{NameCrudCreate}": {"MIDIS": "arrayExcept = [\"user_update\",\"user_delete\",\"user_create\",\"created_at\",\"updated_at\",\"deleted_at\"]\ntokenSTR = \"\"\nfor atr in self.clase.atributos:\n\tif(not atr.nombre in arrayExcept):\n\t\ttokenSTR +=\"<!--\"+atr.displayName+\"-->\\n\"\n\t\ttokenSTR += \"<div class=\\\"form-group\\\">\"\n\t\ttokenSTR +=\"<div class=\\\"col-md-2 text-right\\\">\\n\"\n\t\ttokenSTR +=\"{!!Form::label(\\\"\\\",trans(\\\"copies.\"+self.clase.nombre+\".\"+atr.nombre+\"\\\"))!!}{{trans(\\\"copies.campo_obligatorio\\\")}}\\n\"\n\t\ttokenSTR +=\"</div>\\n\"\n\t\ttokenSTR +=\"<div class=\\\"col-md-10\\\">\\n\"\n\t\ttokenSTR +=\"{!!Form::text(\\\"\"+atr.nombre+\"\\\",null,[\\\"id\\\"=>\\\"\"+atr.nombre+\"\\\",\\\"class\\\" => \\\"form-control\\\",\\\"placeholder\\\"=> trans(\\\"copies.\"+self.clase.nombre+\".\"+atr.nombre+\"\\\"),\\\"required\\\"=>\\\"required\\\"])!!}\\n\"\n\t\ttokenSTR +=\"</div>\\n\"\n\t\ttokenSTR +=\"</div>\\n\"\n\nself.contenido = self.contenido.replace(\"{NameCrudCreate}\",tokenSTR )\n\nself.contenido = self.contenido.replace(\"{ NameCrudCreate }\",tokenSTR)\n\n\n\n"}, "{NameCrudEdit}": {"MIDIS": "arrayExcept = [\"user_update\",\"user_delete\",\"user_create\",\"created_at\",\"updated_at\",\"deleted_at\"]\ntokenSTR = \"\"\nfor atr in self.clase.atributos:\n\tif(not atr.nombreDB in arrayExcept):\n\t\ttokenSTR +=\"<!--\"+atr.displayName+\"-->\\n\"\n\t\ttokenSTR += \"<div class=\\\"form-group\\\">\"\n\t\ttokenSTR +=\"<div class=\\\"col-md-2 text-right\\\">\\n\"\n\t\ttokenSTR +=\"{!!Form::label(\\\"\\\",trans(\\\"copies.\"+self.clase.nombre+\".\"+atr.nombre+\"\\\"))!!}{{trans(\\\"copies.campo_obligatorio\\\")}}\\n\"\n\t\ttokenSTR +=\"</div>\\n\"\n\t\ttokenSTR +=\"<div class=\\\"col-md-10\\\">\\n\"\n\t\ttokenSTR +=\"{!!Form::text(\\\"\"+atr.nombre+\"\\\",$\"+self.clase.nombre+\"->\"+atr.nombre+\",[\\\"id\\\"=>\\\"\"+atr.nombre+\"\\\",\\\"class\\\" => \\\"form-control\\\",\\\"placeholder\\\"=> trans(\\\"copies.\"+self.clase.nombre+\".\"+atr.nombre+\"\\\"),\\\"required\\\"=>\\\"required\\\"])!!}\\n\"\n\t\ttokenSTR +=\"</div>\\n\"\n\t\ttokenSTR +=\"</div>\\n\"\n\nself.contenido = self.contenido.replace(\"{NameCrudEdit}\",tokenSTR )\n\nself.contenido = self.contenido.replace(\"{ NameCrudEdit }\",tokenSTR)\n\n\n\n\n\n"}, "{DataTableGeneralColumns}": {"MIDIS": "arrayExcept = [\"user_update\",\"user_delete\",\"user_create\",\"created_at\",\"updated_at\",\"deleted_at\"]\nindexArrayShow = []\nindexArrayHide = []\ni = 0\nfor atr in self.clase.atributos:\n\tif(not atr.nombre in arrayExcept):\n\t\tindexArrayShow.append(i)\n\telse:\n\t\tindexArrayHide.append(i)\n\ti+=1\ntoken = \"show: \"+str(indexArrayShow)+\",\\n\"\n\ntoken += \"hide: \"+str(indexArrayHide)+\"\\n\"\n\nself.contenido = self.contenido.replace(\"{DataTableGeneralColumns}\",token)\n\nself.contenido = self.contenido.replace(\"{ DataTableGeneralColumns }\",token)\n\n\n\n\n\n\n", "PYTHON": ""}, "{DataTableAuditColumns}": {"MIDIS": "arrayExcept = [\"user_update\",\"user_delete\",\"user_create\",\"created_at\",\"updated_at\",\"deleted_at\"]\nindexArrayShow = []\nindexArrayHide = []\ni = 0\nfor atr in self.clase.atributos:\n\tif(atr.nombre in arrayExcept):\n\t\tindexArrayShow.append(i)\n\telse:\n\t\tindexArrayHide.append(i)\n\ti+=1\ntoken = \"show: \"+str(indexArrayShow)+\",\\n\"\n\ntoken += \"hide: \"+str(indexArrayHide)+\"\\n\"\n\nself.contenido = self.contenido.replace(\"{DataTableAuditColumns}\",token)\n\nself.contenido = self.contenido.replace(\"{ DataTableAuditColumns }\",token)\n\n\n\n\n\n", "PYTHON": ""}, "{DataTableModelCrud}": {"MIDIS": "tokenSTR = \"\"\nfor atributo in self.clase.atributos:\n\ttokenSTR += \"<th>\"+\"{{ trans(\\\"copies.\"+self.clase.nombre+\".\"+atributo.nombre+\"\\\") }}\"+\"</th>\\n\"\nself.contenido = self.contenido.replace(\"{DataTableModelCrud}\", tokenSTR)\nself.contenido = self.contenido.replace(\"{ DataTableModelCrud }\", tokenSTR)\n\n\n\n\n\n\n\n"}, "{NameCrudCapitalize}": {"MIDIS": "frags =  self.clase.nombre.split(\"_\")\ntoken = \"\"\nfor frag in frags:\n\ttoken+=frag.capitalize()\nself.contenido = self.contenido.replace(\"{NameCrudCapitalize}\",token)\nself.contenido = self.contenido.replace(\"{ NameCrudCapitalize }\",token)\n\n\n\n\n\n", "PYTHON": ""}, "{RulesValidator}": {"MIDIS": "arrayExcept = [\"user_update\",\"user_delete\",\"user_create\",\"created_at\",\"updated_at\",\"deleted_at\"]\ntoken = \"\"\nfor atr in self.clase.atributos:\n\tif(not atr.nombre in arrayExcept):\n\t\trequired = \"required|\" if atr.requerido else \"\"\n\t\ttipo = \"number\" if atr.tipo ==\"int\" else \"alfa_num_caracteres|max:100\"\n\t\ttoken+=\"\\t\\t\\t\\\"\"+atr.nombre+\"\\\"=>\\\"\"+required+tipo+\"\\\",\\n\"\nself.contenido = self.contenido.replace(\"{RulesValidator}\",token)\nself.contenido = self.contenido.replace(\"{ RulesValidator }\",token)\n\n\n\n\n\n"}, "{NameCrudUpper}": {"MIDIS": "self.contenido = self.contenido.replace(\"{NameCrudUpper}\",self.clase.nombre.upper())\nself.contenido = self.contenido.replace(\"{ NameCrudUpper }\",self.clase.nombre.upper())\n\n\n\n"}, "{NameCrudLower}": {"MIDIS": "self.contenido = self.contenido.replace(\"{NameCrudLower}\",self.clase.nombre[0].lower() + self.clase.nombre[1:] )\n\nself.contenido = self.contenido.replace(\"{ NameCrudLower }\",self.clase.nombre[0].lower() + self.clase.nombre[1:] )\n\n", "PYTHON": ""}, "{ModelDB}": {"MIDIS": "kenSTR = \"\"\nfor atributo in self.clase.atributos:\n\ttokenSTR += \"\t\t\"+atributo.tipo+\" \"+(atributo.nombre[0]).lower() +(atributo.nombre[1:])+\";\\n\"\nself.contenido = self.contenido.replace(\"{ModelDB}\", tokenSTR)\nself.contenido = self.contenido.replace(\"{ ModelDB }\", tokenSTR)\n\n\n", "PYTHON": ""}, "{ToMap}": {"MIDIS": "tokenSTR = \"\"\nfor atributo in self.clase.atributos:\n\ttokenSTR += '\t'+'map[\"'+atributo.nombre+'\"] = this.'+(atributo.nombre[0]).lower() +(atributo.nombre[1:]) +';\\n'\nself.contenido = self.contenido.replace('{ToMap}', tokenSTR)", "PYTHON": ""}, "{Map}": {"MIDIS": "tokenSTR = \"\"\nfor atributo in self.clase.atributos:\n\ttokenSTR += '\t'+  'this.'+(atributo.nombre[0]).lower() +(atributo.nombre[1:]) + '= obj[\"'+atributo.nombre+'\"]' +';\\n'\nself.contenido = self.contenido.replace('{Map}', tokenSTR)", "PYTHON": ""}, "{ClassCrud}": {"MIDIS": "\ntokenSTR = \"\"\nfor atributo in self.clase.atributos:\n\t\ttokenSTR += \"\t\t\t\t\"+atributo.nombre +\" = input.\"+atributo.nombre+\",\\n\"\ntokenSTR = tokenSTR[:len(tokenSTR)-2]\nself.contenido=self.contenido.replace(\"{ClassCrud}\", tokenSTR)", "PYTHON": ""}, "{ModelCrud}": {"MIDIS": "tokenSTR = \"\"\nfor atributo in self.clase.atributos:\n\ttokenSTR += '\t\t'+('private' if atributo.visibilidad == '-' else 'public')+' ' +atributo.tipo+' '+(atributo.nombre[0]).lower() +(atributo.nombre[1:]) +';\\n\\n'\n\ttokenSTR += ('\t\t[Required]\\n' if atributo.requerido == 1 else '')\n\ttokenSTR +=  '\t\t[DisplayName(\"'+atributo.displayName+'\")]\\n\\n' if atributo.displayName != '' else ''\n\tif atributo.get == 1 or atributo.set == 1:\n\t\ttokenSTR += '\t\tpublic '+ atributo.tipo+' '+atributo.nombre+'\\n\t\t{\\n'\n\t\ttokenSTR += '\t\t\tget { return ' +(atributo.nombre[0]).lower() +(atributo.nombre[1:]) +'; }\\n' if atributo.get ==1 else ' '\n\t\ttokenSTR += '\t\t\tset { ' +(atributo.nombre[0]).lower() +(atributo.nombre[1:]) +' = value; } \\n' if atributo.set == 1 else ''\n\t\ttokenSTR += '\t\t}\\n\\n'\nself.contenido = self.contenido.replace('{ModelCrud}', tokenSTR)", "PYTHON": ""}, "{ClassCrudDB}": {"MIDIS": "\ntokenSTR = \"\"\nfor atributo in self.clase.atributos:\n\t\ttokenSTR += \"\t\t\t\t\"+atributo.nombre +\" = input.\"+atributo.nombreDB+\",\\n\"\ntokenSTR = tokenSTR[:len(tokenSTR)-2]\nself.contenido=self.contenido.replace(\"{ClassCrudDB}\", tokenSTR)", "PYTHON": ""}, "{ClassDBCrud}": {"MIDIS": "\ntokenSTR = \"\"\nfor atributo in self.clase.atributos:\n\t\ttokenSTR += \"\t\t\t\t\"+atributo.nombreDB +\" = input.\"+atributo.nombre+\",\\n\"\ntokenSTR = tokenSTR[:len(tokenSTR)-2]\nself.contenido=self.contenido.replace(\"{ClassDBCrud}\", tokenSTR)", "PYTHON": ""}, "{NameTableDB}": {"MIDIS": "self.contenido = self.contenido.replace(\"{NameTableDB}\",self.clase.nombreDB)", "PYTHON": ""}, "{ControllerCrud}": {"MIDIS": "tokenSTR= \"\"\nfor atributo in self.clase.atributos:\n\ttokenSTR+=\"\\t\\t\\t\\tcase '\" +atributo.nombre.lower() +\"':\\n\"\n\ttokenSTR += \"\\t\\t\\t\\t\\tif (descending){\\n\"\n\ttokenSTR+=\"\\t\\t\\t\\t\\t\\tlist = list.OrderByDescending(r => r.\"+atributo.nombre+\");\\n\"\n\ttokenSTR+=\"\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse {\\n\"\n\ttokenSTR+=\"\\t\\t\\t\\t\\t\\tlist = list.OrderBy(r => r.\"+atributo.nombre+\");\\n\"\n\ttokenSTR+=\"\\t\\t\\t\\t\\t}\\n\"\n\ttokenSTR+=\"\\t\\t\\t\\t\\tbreak;\\n\\n\"\nself.contenido = self.contenido.replace('{ControllerCrud}', tokenSTR)", "PYTHON": ""}, "{CreateCrud}": {"MIDIS": "atributos = self.clase.atributos[1:len(self.clase.atributos)]\nx = int(12 / len(self.clase.atributos)-1)\ntokenSTR =\"\"\nfor atributo in atributos:\n\ttokenSTR+=\"\\t\\t\\t\\t<div class='form-group col-sm-\"+str(x)+\"'>\"\n\ttokenSTR += \"\\n\\t\\t\\t\\t\\t@Html.LabelFor(model => model.\"+atributo.nombre+\")\"\n\ttokenSTR +=\"\\n\\t\\t\\t\\t\\t@Html.TextBoxFor(model => model.\"+atributo.nombre+\", new { @class = 'form-control', @id = 'txt\"+atributo.nombre+\"', @placeholder = '\"+atributo.displayName+\"' })\"\n\ttokenSTR +=\"\\n\\t\\t\\t\\t\\t@Html.ValidationMessageFor(model => model.\"+atributo.nombre+\", '', new { @class = 'text-danger' })\\n\"\n\ttokenSTR+=\"\\t\\t\\t\\t</div>\\n\"\nself.contenido = self.contenido.replace('{CreateCrud}', tokenSTR)", "PYTHON": ""}, "{EditCrud}": {"MIDIS": "atributos = self.clase.atributos[1:len(self.clase.atributos)]\nx = int(12 / len(self.clase.atributos)-1)\ntokenSTR =\"\"\nfor atributo in atributos:\n\ttokenSTR+=\"\\t\\t\\t\\t<div class='form-group col-sm-\"+str(x)+\"'>\"\n\ttokenSTR += \"\\n\\t\\t\\t\\t\\t@Html.LabelFor(model => model.\"+atributo.nombre+\")\"\n\ttokenSTR +=\"\\n\\t\\t\\t\\t\\t@Html.TextBoxFor(model => model.\"+atributo.nombre+\", new { @class = 'form-control', @id = 'txt\"+atributo.nombre+\"', @placeholder = '\"+atributo.displayName+\"' })\"\n\ttokenSTR +=\"\\n\\t\\t\\t\\t\\t@Html.ValidationMessageFor(model => model.\"+atributo.nombre+\", '', new { @class = 'text-danger' })\\n\"\n\ttokenSTR+=\"\\t\\t\\t\\t</div>\\n\"\nself.contenido = self.contenido.replace('{EditCrud}', tokenSTR)", "PYTHON": ""}, "{IndexDisplayName}": {"MIDIS": "atributos = self.clase.atributos[1:len(self.clase.atributos)]\ntokenSTR = \"\"\nfor atributo in atributos:\n\ttokenSTR+=\"\\t\\t\\t\\t\\t\\t\\t\\t<th>\\n\"\n\ttokenSTR+= \"\\t\\t\\t\\t\\t\\t\\t\\t\\t@Html.RouteLink('\"+atributo.displayName+\"',  '\"+self.clase.nombre+\"', new { sortField = '\"+(atributo.nombre[0]).lower() +(atributo.nombre[1:])+\"', asc = ViewBag.Ordering, page = ((String.IsNullOrWhiteSpace(Request.Params['page'])) ? '1' : Request.Params['page']), recordsNumber = Model.RecordsNumber, searchName = ViewBag.CurrentFilter })\\n\"\n\ttokenSTR+=\"\\t\\t\\t\\t\\t\\t\\t\\t</th>\\n\"\nself.contenido = self.contenido.replace(\"{IndexDisplayName}\",tokenSTR)"}, "{Attributes}": {"MIDIS": "token = \"\"\nfor atr in self.clase.atributos:\n\ttoken+=\"\\\"\"+atr.nombreDB+\"\\\",\\n\"\nself.contenido = self.contenido.replace(\"{Attributes}\",token[:len(token)-2])\nself.contenido = self.contenido.replace(\"{ Attributes }\",token[:len(token)-2])\n\n\n\n"}, "{EditColumnDataTable}": {"MIDIS": "token = \"\"\nfor atr in self.clase.atributos:\n\ttoken+=\"->editColumn(\\\"\"+atr.nombreDB+\"\\\", function ($\"+self.clase.nombre+\") {return \\\"\\\" . $\"+self.clase.nombre+\"->\"+atr.nombreDB+\";})\\n\"\nself.contenido = self.contenido.replace(\"{EditColumnDataTable}\",token)\nself.contenido = self.contenido.replace(\"{ EditColumnDataTable }\",token)\n\n"}, "{IndexCrud}": {"MIDIS": "atributos = self.clase.atributos[1:len(self.clase.atributos)]\ntokenSTR = \"\"\nfor atributo in atributos:\n\ttokenSTR+=\"\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\"\n\ttokenSTR+= \"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t@Html.DisplayFor(modelItem => item.\"+atributo.nombre+\")\\n\"\n\ttokenSTR+=\"\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\"\nself.contenido = self.contenido.replace(\"{IndexCrud}\",tokenSTR)"}, "{AttributeID}": {"MIDIS": "self.contenido = self.contenido.replace(\"{AttributeID}\",self.clase.key)"}, "{AttributeSearch}": {"MIDIS": "self.contenido = self.contenido.replace(\"{AttributeSearch}\",self.clase.search)"}, "{CrudBodyDB}": {"MIDIS": "arrayExcept = [\"user_update\",\"user_delete\",\"user_create\",\"created_at\",\"updated_at\",\"deleted_at\"]\ntokenSTR = \"\"\nfor atributo in self.clase.atributos:\n\tif(not atributo.nombre in arrayExcept):\n\t\ttokenSTR+=\"\\t\\t\\t$\"+self.clase.nombre+\"->\"+atributo.nombre+\" = $request->\"+atributo.nombre+\";\\n\"\nself.contenido = self.contenido.replace(\"{CrudBodyDB}\",tokenSTR)\nself.contenido = self.contenido.replace(\"{ CrudBodyDB }\",tokenSTR)\n\n"}, "{NameDB}": {"MIDIS": "self.contenido = self.contenido.replace(\"{NameDB}\",self.clase.nombreDB)"}, "{Folder}": {"MIDIS": "self.contenido = self.contenido.replace(\"{Folder}\",self.clase.folderCrud)"}, "{FormId}": {"MIDIS": "self.contenido = self.contenido.replace(\"{FormId}\",str(self.clase.FormId))"}}}