{
  "Folder": "self.content = self.content.replace(\"{[Folder]}\",model.p('folder'))\n",
  "NameWidgetTypeFile": "self.content = self.content.replace(\"{[NameWidgetTypeFile]}\",model.p('widget-name'))\n",
  "NameWidgetTypeClass": "self.content = self.content.replace(\"{[NameWidgetTypeClass]}\",self.get_upper_camel_content(model.p('name')))\n",
  "NameModelTypeFile": "_name = model.p('name').lower()\nself.content = self.content.replace(\"{[NameModelTypeFile]}\",_name)\n",
  "ModelBasicViewModel": "self.content = self.content.replace(\"{[ModelBasicViewModel]}\",'')\n",
  "NameModelTypeClass": "self.content = self.content.replace(\"{[NameModelTypeClass]}\",self.get_upper_camel_content(model.p('name')))\n",
  "NameModelTypeProperty": "self.content = self.content.replace(\"{[NameModelTypeProperty]}\",self.get_lower_camel_content(model.p('name')))\n",
  "PropertyDefinitions": "from functools import reduce\na = reduce(lambda a,b : a+';\\n  '+b,list(map( lambda x: x.__dict__['name']+': '+x.__dict__['type'],model.__dict__['attributes'])))+';'\nself.content = self.content.replace(\"{[PropertyDefinitions]}\",a)\n",
  "MainPropertyDefinition": "self.content = self.content.replace(\"{[MainPropertyDefinition]}\",'id')\n",
  "PropertyMappers": "from functools import reduce\na = reduce(lambda a,b : a+',\\n      '+b,list(map( lambda x: x.__dict__['name']+': obj.'+x.__dict__['name'],model.__dict__['attributes'])))+','\nself.content = self.content.replace(\"{[PropertyMappers]}\",a)\n",
  "NameModelPluralTypeClass": "self.content = self.content.replace(\"{[NameModelPluralTypeClass]}\",self.get_upper_camel_content(model.p('name-plural')))\n",
  "NameModelPluralTypeFile": "_name = model.p('name-plural').lower()\nself.content = self.content.replace(\"{[NameModelPluralTypeFile]}\",_name)\n"
}
