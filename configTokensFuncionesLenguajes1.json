{
  "tokens": {
    "{NameCrud}": {
      ".NET-UCALDAS": "self.contenido = self.contenido.replace(\"{NameCrud}\",self.clase.nombre)",
      "PYTHON": ""
    },
    "{NameCrudLower}": {
      ".NET-UCALDAS": "self.contenido = self.contenido.replace(\"{NameCrudLower}\",self.clase.nombre[0].lower() + self.clase.nombre[1:] )",
      "PYTHON": ""
    },
    "{ClassCrud}": {
      ".NET-UCALDAS": "\ntokenSTR = \"\"\nfor atributo in self.clase.atributos:\n\t\ttokenSTR += \"\t\t\t\t\"+atributo.nombre +\" = input.\"+atributo.nombre+\",\\n\"\ntokenSTR = tokenSTR[:len(tokenSTR)-2]\nself.contenido=self.contenido.replace(\"{ClassCrud}\", tokenSTR)",
      "PYTHON": ""
    },
    "{ModelCrud}": {
      ".NET-UCALDAS": "tokenSTR = \"\"\nfor atributo in self.clase.atributos:\n\ttokenSTR += '\t\t'+('private' if atributo.visibilidad == '-' else 'public')+' ' +atributo.tipo+' '+(atributo.nombre[0]).lower() +(atributo.nombre[1:]) +';\\n\\n'\n\ttokenSTR += ('\t\t[Required]\\n' if atributo.requerido == 1 else '')\n\ttokenSTR +=  '\t\t[DisplayName(\"'+atributo.displayName+'\")]\\n\\n' if atributo.displayName != '' else ''\n\tif atributo.get == 1 or atributo.set == 1:\n\t\ttokenSTR += '\t\tpublic '+ atributo.tipo+' '+atributo.nombre+'\\n\t\t{\\n'\n\t\ttokenSTR += '\t\t\tget { return ' +(atributo.nombre[0]).lower() +(atributo.nombre[1:]) +'; }\\n' if atributo.get ==1 else ' '\n\t\ttokenSTR += '\t\t\tset { ' +(atributo.nombre[0]).lower() +(atributo.nombre[1:]) +' = value; } \\n' if atributo.set == 1 else ''\n\t\ttokenSTR += '\t\t}\\n\\n'\nself.contenido = self.contenido.replace('{ModelCrud}', tokenSTR)",
      "PYTHON": ""
    },
    "{ModelDB}": {
      ".NET-UCALDAS": "tokenSTR = \"\"\nfor atributo in self.clase.atributos:\n\ttokenSTR += '\t\t'+('private' if atributo.visibilidad == '-' else 'public')+' ' +atributo.tipo+' '+(atributo.nombre[0]).lower() +(atributo.nombre[1:]) +';\\n\\n'\n\tif atributo.get == 1 or atributo.set == 1:\n\t\ttokenSTR += '\t\tpublic '+ atributo.tipo+' '+atributo.nombre+'\\n\t\t{\\n'\n\t\ttokenSTR += '\t\t\tget { return ' +(atributo.nombre[0]).lower() +(atributo.nombre[1:]) +'; }\\n' if atributo.get ==1 else ' '\n\t\ttokenSTR += '\t\t\tset { ' +(atributo.nombre[0]).lower() +(atributo.nombre[1:]) +' = value; } \\n' if atributo.set == 1 else ''\n\t\ttokenSTR += '\t\t}\\n\\n'\nself.contenido = self.contenido.replace('{ModelDB}', tokenSTR)",
      "PYTHON": ""
    },
    "{ClassCrudDB}": {
      ".NET-UCALDAS": "\ntokenSTR = \"\"\nfor atributo in self.clase.atributos:\n\t\ttokenSTR += \"\t\t\t\t\"+atributo.nombre +\" = input.\"+atributo.nombreDB+\",\\n\"\ntokenSTR = tokenSTR[:len(tokenSTR)-2]\nself.contenido=self.contenido.replace(\"{ClassCrudDB}\", tokenSTR)",
      "PYTHON": ""
    },
    "{ClassDBCrud}": {
      ".NET-UCALDAS": "\ntokenSTR = \"\"\nfor atributo in self.clase.atributos:\n\t\ttokenSTR += \"\t\t\t\t\"+atributo.nombreDB +\" = input.\"+atributo.nombre+\",\\n\"\ntokenSTR = tokenSTR[:len(tokenSTR)-2]\nself.contenido=self.contenido.replace(\"{ClassDBCrud}\", tokenSTR)",
      "PYTHON": ""
    },
    "{NameTableDB}": {
      ".NET-UCALDAS": "self.contenido = self.contenido.replace(\"{NameTableDB}\",self.clase.nombreDB)",
      "PYTHON": ""
    },
    "{ControllerCrud}":{
      ".NET-UCALDAS": "tokenSTR= \"\"\nfor atributo in self.clase.atributos:\n\ttokenSTR+=\"\\t\\t\\t\\tcase '\" +atributo.nombre.lower() +\"':\\n\"\n\ttokenSTR += \"\\t\\t\\t\\t\\tif (descending){\\n\"\n\ttokenSTR+=\"\\t\\t\\t\\t\\t\\tlist = list.OrderByDescending(r => r.\"+atributo.nombre+\");\\n\"\n\ttokenSTR+=\"\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\telse {\\n\"\n\ttokenSTR+=\"\\t\\t\\t\\t\\t\\tlist = list.OrderBy(r => r.\"+atributo.nombre+\");\\n\"\n\ttokenSTR+=\"\\t\\t\\t\\t\\t}\\n\"\n\ttokenSTR+=\"\\t\\t\\t\\t\\tbreak;\\n\\n\"\nself.contenido = self.contenido.replace('{ControllerCrud}', tokenSTR)",
      "PYTHON": ""
    },
    "{CreateCrud}":{
      ".NET-UCALDAS":"atributos = self.clase.atributos[1:len(self.clase.atributos)]\nx = int(12 / len(self.clase.atributos)-1)\ntokenSTR =\"\"\nfor atributo in atributos:\n\ttokenSTR+=\"\\t\\t\\t\\t<div class='form-group col-sm-\"+str(x)+\"'>\"\n\ttokenSTR += \"\\n\\t\\t\\t\\t\\t@Html.LabelFor(model => model.\"+atributo.nombre+\")\"\n\ttokenSTR +=\"\\n\\t\\t\\t\\t\\t@Html.TextBoxFor(model => model.\"+atributo.nombre+\", new { @class = 'form-control', @id = 'txt\"+atributo.nombre+\"', @placeholder = '\"+atributo.displayName+\"' })\"\n\ttokenSTR +=\"\\n\\t\\t\\t\\t\\t@Html.ValidationMessageFor(model => model.\"+atributo.nombre+\", '', new { @class = 'text-danger' })\\n\"\n\ttokenSTR+=\"\\t\\t\\t\\t</div>\\n\"\nself.contenido = self.contenido.replace('{CreateCrud}', tokenSTR)",
      "PYTHON": ""
    },
    "{EditCrud}":{
      ".NET-UCALDAS":"atributos = self.clase.atributos[1:len(self.clase.atributos)]\nx = int(12 / len(self.clase.atributos)-1)\ntokenSTR =\"\"\nfor atributo in atributos:\n\ttokenSTR+=\"\\t\\t\\t\\t<div class='form-group col-sm-\"+str(x)+\"'>\"\n\ttokenSTR += \"\\n\\t\\t\\t\\t\\t@Html.LabelFor(model => model.\"+atributo.nombre+\")\"\n\ttokenSTR +=\"\\n\\t\\t\\t\\t\\t@Html.TextBoxFor(model => model.\"+atributo.nombre+\", new { @class = 'form-control', @id = 'txt\"+atributo.nombre+\"', @placeholder = '\"+atributo.displayName+\"' })\"\n\ttokenSTR +=\"\\n\\t\\t\\t\\t\\t@Html.ValidationMessageFor(model => model.\"+atributo.nombre+\", '', new { @class = 'text-danger' })\\n\"\n\ttokenSTR+=\"\\t\\t\\t\\t</div>\\n\"\nself.contenido = self.contenido.replace('{EditCrud}', tokenSTR)",
      "PYTHON": ""
    },
    "{IndexDisplayName}":{
      ".NET-UCALDAS":"atributos = self.clase.atributos[1:len(self.clase.atributos)]\ntokenSTR = \"\"\nfor atributo in atributos:\n\ttokenSTR+=\"\\t\\t\\t\\t\\t\\t\\t\\t<th>\\n\"\n\ttokenSTR+= \"\\t\\t\\t\\t\\t\\t\\t\\t\\t@Html.RouteLink('\"+atributo.displayName+\"',  '\"+self.clase.nombre+\"', new { sortField = '\"+(atributo.nombre[0]).lower() +(atributo.nombre[1:])+\"', asc = ViewBag.Ordering, page = ((String.IsNullOrWhiteSpace(Request.Params['page'])) ? '1' : Request.Params['page']), recordsNumber = Model.RecordsNumber, searchName = ViewBag.CurrentFilter })\\n\"\n\ttokenSTR+=\"\\t\\t\\t\\t\\t\\t\\t\\t</th>\\n\"\nself.contenido = self.contenido.replace(\"{IndexDisplayName}\",tokenSTR)"
    },
    "{IndexCrud}":{
      ".NET-UCALDAS":"atributos = self.clase.atributos[1:len(self.clase.atributos)]\ntokenSTR = \"\"\nfor atributo in atributos:\n\ttokenSTR+=\"\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\"\n\ttokenSTR+= \"\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t@Html.DisplayFor(modelItem => item.\"+atributo.nombre+\")\\n\"\n\ttokenSTR+=\"\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\"\nself.contenido = self.contenido.replace(\"{IndexCrud}\",tokenSTR)"
    },
    "{AttributeID}":{
      ".NET-UCALDAS":"self.contenido = self.contenido.replace(\"{AttributeID}\",self.clase.key)"
    },
     "{AttributeSearch}":{
      ".NET-UCALDAS":"self.contenido = self.contenido.replace(\"{AttributeSearch}\",self.clase.search)"
    },
    "{CrudBodyDB}":{
      ".NET-UCALDAS": "tokenSTR = ''\nfor atributo in self.clase.atributos:\n\ttokenSTR+='\\t\\t\\t\\t\\tdbRecord.'+atributo.nombreDB+' = dbModel.'+atributo.nombre+';\\n'\nself.contenido = self.contenido.replace(\"{CrudBodyDB}\",tokenSTR)"
    },
    "{NameDB}":{
      ".NET-UCALDAS": "self.contenido = self.contenido.replace(\"{NameDB}\",self.clase.nombreDB)"
    },
    "{Folder}":{
      ".NET-UCALDAS": "self.contenido = self.contenido.replace(\"{Folder}\",self.clase.folderCrud)"
    },
    "{FormId}":{
      ".NET-UCALDAS": "self.contenido = self.contenido.replace(\"{FormId}\",str(self.clase.FormId))"
    }
  }
}